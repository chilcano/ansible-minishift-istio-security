#! /bin/bash

# Manage IP address settings on your minishifts (Centos7 Docker Machine)

set -e
operation=${1}
shift

case $(uname) in
    CYGWIN*)
        sudo ()
        {
            if [[ $# -eq 0 ]]; then
                printf "Usage: sudo program arg1 arg2 ...\n";
                return 1;
            fi;
            prog="$1";
            shift;
            cygstart --action=runas $(which "$prog") "$@"
        }
        ;;
esac

case $operation in
    # Get our currently in-use minishift addresses
    ls)
        printf "%-8s %s\n" "State" "IP Address"
        printf "%s\n" "------------------------------------------------"
            ip=$(minishift ip)
            networking_file="/var/lib/minishift/networking"
            state=$(minishift ssh "
                if [[ -f $networking_file ]] && grep -q \"# IP=$ip\" $networking_file; then
                    echo static;
                else
                    echo dhcp;
                fi
            ")
            printf "%-8s %s\n" $state $ip
            printf "%s\n" "--"
            #minishift ssh "ip addr show eth1 | grep 'inet.*eth1'"
            minishift ssh "ip addr show eth1"
            printf "%s\n" "--"
            route
            printf "%s\n" "--"
        ;;

    # Configure the minishift to use a static ip address (defaults to current address)
    static)
        # Get the machine's ip and broadcast addresses (or use the ip address provided on the command-line)
        ip=${1:-$(minishift ip)}
        broadcast=${ip%.*}.255

        # Create the '/var/lib/minishift/networking' file
cat <<EOF | minishift ssh "sudo tee /var/lib/minishift/networking >/dev/null"
# This file was automatically generated by running "$(basename $BASH_SOURCE)" from the minishift host
# This is valid for Centos7 Docker Machine
# IP=$ip
# File=/var/lib/minishift/networking
# Loaded by: sudo /usr/local/bin/minishift-set-ipaddress

IPADDR=$ip
NETMASK=255.255.255.0
DEVICE=eth1
GATEWAY=0.0.0.0
DNS1=8.8.8.8
DNS2=8.8.4.4
EOF

        # Go ahead and load the '/var/lib/minishift/networking' from '/usr/local/bin/minishift-set-ipaddress'
        minishift ssh "sudo /usr/local/bin/minishift-set-ipaddress"

        # Regenerate the minishift certs (required ?)
        # TODO Add something if needed minishift regenerate-certs

        # Status report
        printf "Minishift now has a static IP address\n"
        ;;

    # Configure the minishift to use a DHPC address
    dhcp)
        # Delete the config file and bring the interface down
        minishift ssh "sudo rm -f /var/lib/minishift/networking"
        #minishift ssh "sudo ifconfig eth1 down"

        # Start up the DHPC client again
        #minishift ssh "sudo /sbin/udhcpc -b -i eth1 -x hostname boot2docker -p /var/run/udhcpc.eth1.pid &"
        minishift ssh "sudo systemctl restart network"

        # Status report
        printf "minishift now has a dynamic ip address\n"
        ;;

    # Update the hosts file to match the current minishift addresses
    hosts)
        # Modifications to '/etc/hosts' file isn't needed because I do from Ansible
        # Display the current/updated /etc/hosts file
        printf "\n"
        printf "# /etc/hosts\n"
        printf "%s\n" "--------------------------------"
        sed -Ee '/^[[:space:]]*(#|$)/d' /etc/hosts
        ;;

    *)
        printf "Usage: $(basename $BASH_SOURCE) <command> args...\n"
        printf "    Manage IP address settings on your minishifts (Centos7 Docker Machine)\n"
        printf "\n"
        printf "Commands:\n"
        printf "    ls                             List running minishifts' ip address\n"
        printf "    static <machine> [ip-address]  Configure <machine> to use a static IP address\n"
        printf "                                   (default is current address)\n"
        printf "    dhcp <machine>                 Configure <machine> to use DHCP client to gather IP address\n"
        printf "    hosts                          Show /etc/hosts file\n"
    ;;
esac
